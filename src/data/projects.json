[
{
    "title": "Brand-Specific Product Recommendations",
    "slug": "brand-specific-recommendations",
    "image": "./images/AHR-accelerator-recs.jpg",
    "descriptionShort": "These product recommendation carousels are generated based on customer data for a highly personalized experience.",
    "descriptionLong1": "The purpose of this project was to get relevant products in front of authenticated customers in an ecommerce environment where brand mandated, brand recommended, and restricted products need to be taken into consideration on a per-customer level. This was accomplished in collaboration with members of the marketing, ecommerce, and IT teams to build a service which generates a list of recommended products per customer based on specific criteria and logic and outputs it to cloud-hosted JSON files.",
    "descriptionLong2": "My contributions included writing JavaScript to consume the JSON data, developing the template for the recommendation carousel, dynamically appending tracking code, and serving the script on specific site locations through Adobe Target.",
    "projectLink": "https://codepen.io/asuratte/pen/yLMxGWK",
    "projectLinkText": "View on CodePen >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Spreadsheet Driven Banner Ads",
    "slug": "spreadsheet-banner-ads",
    "image": "./images/AHR-spreadsheet-banners.jpg",
    "descriptionShort": "This project streamlined the running of weekly banner ads, enabling the marketing team to own the process.",
    "descriptionLong1": "The purpose of this project was to enable all members of our small marketing team to run weekly ads on multiple areas of the site without developer assistance. They were provided a Google Sheet where they could enter image URLs, copy, links, and start/end dates for each offer, as well as the location on the site, which customer groups should be included/excluded, and whether it should show for unauthenticated or authenticated users. The marketing team could also control the design of the different banner elements via provided utility classes.",
    "descriptionLong2": "My contributions included writing JavaScript to consume the JSON data from the Google sheet, developing the banner template to accommodate a combination of 1-2 images, headline, overline, subheadline, and call to action, as well as serving the experience through Adobe Target.",
    "projectLink": "https://codepen.io/asuratte/pen/OJNaxLb",
    "projectLinkText": "View on CodePen >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Spreadsheet Driven Deals Landing Page",
    "slug": "deals-page",
    "image": "./images/AHR-deals-spreadsheet-driven.jpg",
    "descriptionShort": "This landing page is populated by JavaScript and a JSON feed from a Google Sheet.",
    "descriptionLong1": "The purpose of this project was to enable all members of our small marketing team to update this deals page without developer assistance. They were provided a Google Sheet where they could enter image URLs, copy, links, and start/end dates for each offer, which would then instantly populate the page.",
    "descriptionLong2": "My contributions included writing JavaScript to consume the JSON data, desigining the offers to accommodate a combination of 1-2 images, headline, subheadline, and call to action, as well as serving the experience through Adobe Target.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Category Specific Product Recommendations",
    "slug": "category-recommendations",
    "image": "./images/AHR-category-specific-recommendations.jpg",
    "descriptionShort": "These are two examples of a dynamic sitewide recommendations carousel that displays on category pages.",
    "descriptionLong1": "I built an Adobe Target recommendations carousel that leveraged data layer variables to recommend relevant trending sale products on CLP and PLP pages. This involved writing JavaScript to determine if there were at least 3 products to show, developing the recommendation carousel template, defining criteria for product recommendation, and including page information in the Adobe Analytics tracking code for reporting.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Notify Me When Available",
    "slug": "notify-me",
    "image": "./images/AHR-notify-me.jpg",
    "descriptionShort": "This feature allows users to sign up to be notified when a product is back in stock.",
    "descriptionLong1": "For this project I was tasked with creating an experience where customers could sign up to be notified when an item is back in stock. First, I wrote JavaScript to target the out of stock items on the PLP and Search pages and inserted a \"Notify Me\" button in place of the Add to Cart button. Next, I inserted HTML into the page for the modal window and form that would be triggered by the button.",
    "descriptionLong2": "I set up a click handler for the button that would collect data from our data layer and the DOM, such as User ID and Product Title, and insert it into the form's hidden fields. I also used the data layer to populate the product name into the modal heading. Finally, I added an AJAX request that submits the form to a database hosted by our ESP (Acoustic), so we can send triggered emails when something is back in stock. The script for this experience was injected into the site using Adobe Target.",
    "projectLink": "https://codepen.io/asuratte/pen/bGpzxVZ",
    "projectLinkText": "View on CodePen >",
    "previewCta": "See Details >",
    "featured": true,
    "projectType": "professional"
},
{
    "title": "Order Cancellation Component",
    "slug": "order-cancellation",
    "image": "./images/AHR-order-cancellations.jpg",
    "descriptionShort": "This feature informs users if items they ordered are no longer available.",
    "descriptionLong1": "For this project I was tasked with taking customer-specific order cancellation data from an Excel spreadsheet and creating a component that would conditionally show on users' order history page based on their customer number. I translated the spreadsheet into JSON and split it up into 3 minified files for performance. I then wrote JavaScript to read the data from each file, search for a customer number match, build a table with any matching data, and then insert that table into the page in a bootstrap accordion.",
    "descriptionLong2": "If a user visits their order history pages and has cancelled items, they will see a banner alerting them to it, and will be able to click a button to expand the accordion and view the table. This script was then injected into the site via Adobe Target.",
    "projectLink": "https://codepen.io/asuratte/pen/rNweZJL",
    "projectLinkText": "View on CodePen >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Web Component Builder",
    "slug": "adshark",
    "image": "./images/adshark.jpg",
    "descriptionShort": "This was an Angular/Node.js web application made to streamline the creation of web components and emails.",
    "descriptionLong1": "I managed a team of interns and mid-level developers to complete this project. The objective was to streamline the creation of web components and HTML emails, with the aim of freeing up the developers to focus on revenue driving activities. The end users ranged from directors, marketing project managers, copywriters, designers, and developers.",
    "descriptionLong2": "The finished product was an internal web application that pulled data from a project management system and formatted it into a designated HTML or impex template. The generated component or email could then be previewed in the app across 4 different breakpoints, and updated in both the app and project management system simultaneously. The production-ready code was then available to copy or download directly from the app. This app resulted in a 40 percent gain in efficiency for the developer team.",
    "descriptionLong3": "My contributions included project management from concept to rollout, contributing JavaScript code, mentoring and managing workload of interns, creating a detailed project calendar and issue queue, creating extensive documentation, deploying on Windows IIS server, conducting user reviews, and assisting in training for the end users.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Open Invoice Alert",
    "slug": "open-invoice",
    "image": "./images/AHR-open-invoice.jpg",
    "descriptionShort": "This is an alert that shows once per session for users that currently have an unpaid invoice.",
    "descriptionLong1": "I worked with developers in IT to create a service which generates a list of customers that have an open invoice. I then consumed the JSON data via their API and wrote a script that checks it against the logged in user's customer ID, and shows the banner if they have an open invoice. The script was served through Adobe Target.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "230 West Coffee Launch Landing Page",
    "slug": "230-west-coffee-launch-landing-page",
    "image": "./images/AHR-230West-LP.jpg",
    "descriptionShort": "This is one of seven landing pages I designed and built for a new product launch campaign.",
    "descriptionLong1": "These landing pages were designed in Photoshop, and coded using Bootstrap as a base.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Dynamic Email Template",
    "slug": "dynamic-email-template",
    "image": "./images/AHR-dynamic-email-template.jpg",
    "descriptionShort": "This email template was built using Acoustic to enable marketers to build robust emails without developer support.",
    "descriptionLong1": "The goal for this project was to enable the wider marketing team to build a variety of emails without the help of a developer. The content in this Acoustic email template is populated from a data file containing the contacts, brand, domain name, products, pricing, copy, image URLs, etc. Depending on what is filled in inside of the data file, this template can produce emails with a variety of layouts including 2x5  or 3x4 product grids,   hero image and copy only, or text-based emails.",
    "descriptionLong2": "The template is configured so that if a field is left blank, it will not show in the email. For example, if a 2x5 product grid is selected, it can have between 1 and 10 products. The template also allows for marketing to customers from all business segments by including a dynamic header, footer, and tracking links that update based on brand association.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "1888 Mills Landing Page",
    "slug": "1888-mills-landing-page",
    "image": "./images/AHR-1888-Mills-LP.jpg",
    "descriptionShort": "This is a landing page I designed and built to promote a supplier for American Hotel Register Company.",
    "descriptionLong1": "This landing page was mocked up by the supplier's design team, and provided to me for coding. I then adapted the design to fit within American Hotel brand standards, and coded it using Bootstrap as a base.",
    "projectLink": "https://www.americanhotel.com/1888-mills",
    "projectLinkText": "View on AmericanHotel.com >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Reorder Email Template",
    "slug": "re-email-template",
    "image": "./images/AHR-reorder-email.jpg",
    "descriptionShort": "The goal for this project was to make it easy for customers to reorder previous purchases.",
    "descriptionLong1": "This was our first venture into automated email marketing. Data flows from our e-commerce site into a database in Acoustic, and it's populated into the template using variables for the order number, customer name, purchase date, total, and reorder link. A grid of previously purchased products is also featured.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "OTB Boots Site",
    "slug": "otb-boots-homepage",
    "image": "./images/OTB-Boots-Homepage.jpg",
    "descriptionShort": "This website was created to launch a new boot brand.",
    "descriptionLong1": "My role on this project was to create branding guidelines, design the website theme, and build the site. I first met with stakeholders to gather info, created a mood board, and developed that into a full style guide. Next, I gathered requirements for the site architecture and features, and translated that into wireframes. I went with a mobile-first approach, to ensure the site would be usable on any device. I then created mockups in Adobe XD, going with a bold, high-contrast design to match the branding.",
    "descriptionLong2": "Once a design was decided on, I was tasked with choosing a CMS. I chose Wordpress, as lots of flexibility was needed for this still-in-development brand. I chose a base theme that would allow for last-minute layout customizations. I then created a child theme and customized the theme to match the approved mockups.",
    "descriptionLong3": "The final pre-launch tasks included cross-browser and cross-device testing, adding Google Analytics and Google Tag Manager, setting up Webmaster Tools, and adding an SSL certificate.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Responsive Email Development",
    "slug": "responsive-email-development",
    "image": "./images/responsive-email.jpg",
    "descriptionShort": "This is an HTML email template that works across all major email clients.",
    "descriptionLong1": "Above, from left to right, it's shown in Outlook for Mac, Outlook for Windows, Gmail mobile app, and iOS Mail app. Fallbacks are in place for things like web fonts and gradients, so users in older/less forgiving email clients can still have a positive experience. This template was thoroughly tested in Litmus to ensure cross-client compatibility.",
    "projectLink": "https://codepen.io/asuratte/pen/OJVKmoE",
    "projectLinkText": "View on CodePen >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Homepage Component Placement A/B Test",
    "slug": "homepage-component-placement-test",
    "image": "./images/AHR-ShopByCategory-AB-Test.jpg",
    "descriptionShort": "This was an experiment I set up on the homepage using Adobe Target.",
    "descriptionLong1": "The left screenshot was the control, and the right was the variation. The goal of the experiment was to increase revenue by getting products in front of users sooner. The variation ended up winning.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "US Patriot Checkout Multivariate Test",
    "slug": "usp-checkout-mvt-test",
    "image": "./images/USP-Mobile-MVT-Test.jpg",
    "descriptionShort": "I ran this test on the mobile version of the US Patriot checkout page. It was set up using Google Optimize.",
    "descriptionLong1": "The primary goal of this test was to decrease the bounce rate on mobile. The secondary goal was to increase the conversion rate. While creating this test, I analyzed the control page and found areas for improvement. I ended up with 64 total variations tested, with the winner being shown on the right in the image above.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "US Patriot Mobile Homepage A/B Test",
    "slug": "usp-mobile-homepage-ab-test",
    "image": "./images/USP-Homepage-AB-Test.jpg",
    "descriptionShort": "I ran this test on the mobile version of the US Patriot homepage. It was set up using Google Optimize.",
    "descriptionLong1": "The screenshot on the left was the control, the middle screenshot was variation 1, and the right screenshot was variation 2. Variation 2 was the winner, with the most clicks on the sub-category links.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Brew Chew Website Design",
    "slug": "brew-chew-web-design",
    "image": "./images/Brew-Chew-LP.jpg",
    "descriptionShort": "I designed and built this theme for an e-commerce site promoting a new brand.",
    "descriptionLong1": "This custom e-commerce site theme was developed using Stencil CLI for the BigCommerce platform.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "404 Page Design",
    "slug": "404-landing-page",
    "image": "./images/AHR-404-LP.jpg",
    "descriptionShort": "I created this as an entry to a department-wide contest, and it was chosen as the winning design.",
    "descriptionLong1": "An adaptation of this design is currently being used on the American Hotel website.",
    "projectLink": "https://www.americanhotel.com/404",
    "projectLinkText": "View on AmericanHotel.com >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "US Patriot Category Split URL Test",
    "slug": "usp-category-split-url-test",
    "image": "./images/USPMidLevelCatPage.jpg",
    "descriptionShort": "For this test I created a mid-level category page, to go in between the CLP and PLP.",
    "descriptionLong1": "The hypothesis for this test was that if users were able to drill down to the boot they wanted before being presented with the full PLP, they'd be more likely to add a pair of boots to their cart. That hypothesis was proven false by this test. The custom-coded carousels were made using the Slick slider plugin.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Shellback Tactical Website Redesign",
    "slug": "sbt-website-redesign",
    "image": "./images/SBT-Site-Redesign.jpg",
    "descriptionShort": "I redesigned and developed a custom BigCommerce theme for an existing e-commerce site.",
    "descriptionLong1": "The left screenshot is the old website. The right screenshot is the redesigned version. I built a custom BigCommerce Blueprint theme for this project. The goal was to give the brand a more modern look and feel. I also created an updated logo design and style guide to go with the new website theme.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "US Patriot Mobile Locations User Flow",
    "slug": "usp-mobile-locations",
    "image": "./images/usp-mobile-locations-flow.jpg",
    "descriptionShort": "I improved the user experience on mobile for users trying to get store location information.",
    "descriptionLong1": "The previous version of the locations section on mobile involved scrolling through a long list of locations across every state. I improved upon this by adding a location selector feature built with JavaScript. Once the user selected their state, they were presented with a list of stores near them.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Apptical Website Redesign",
    "slug": "apptical",
    "image": "./images/Apptical.jpg",
    "descriptionShort": "I designed, migrated content into, and built a custom theme for the Apptical website.",
    "descriptionLong1": "For this project I designed and built a new website for Apptical using Wordpress. I migrated their existing site content, identified needs for new content, designed the information architecture, configured web forms, and designed/built the site from wireframe to finished product. I then trained associates on making site updates, and worked with their IT department to deploy the new site.",
    "projectLink": "https://www.apptical.com/",
    "projectLinkText": "View on Apptical.com >",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Personalized Homepage Content with HubSpot",
    "slug": "usp-personalization",
    "image": "./images/USP-smart-homepage.jpg",
    "descriptionShort": "These are two examples of the personalization I set up on US Patriot's homepage for different customer segments.",
    "descriptionLong1": "These were created and served using HubSpot smart content. We identified four segments to create custom experiences for, and designated one default experience for anonymous visitors. Visitors we had segment data for would see homepage content that was tailored to their specific needs.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Exit Intent Overlay",
    "slug": "usp-exit-intent-popup",
    "image": "./images/exit-popup_full.jpg",
    "descriptionShort": "This was one of many on-site remarketing overlays I designed and built for US Patriot.",
    "descriptionLong1": "These were created and scheduled using JustUno.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Supplier Marketing Emails",
    "slug": "american-hotel-emails",
    "image": "./images/AHR-emails.jpg",
    "descriptionShort": "I designed these emails for various supplier marketing campaigns at American Hotel Register Company.",
    "descriptionLong1": "These emails were mocked up in Photoshop, coded, tested in Litmus, and imported into IBM Acoustic for sending.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "US Patriot Email Templates",
    "slug": "usp-email-templates",
    "image": "./images/usp-emails_full.jpg",
    "descriptionShort": "I designed, built and tested several email templates for use in HubSpot and MailChimp.",
    "descriptionLong1": "These were then used by the design team to create emails without the need for custom code.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Infographic Design",
    "slug": "infographic-design",
    "image": "./images/Fleetmatics-infographic.jpg",
    "descriptionShort": "I designed this infographic as a visual representation of Fleetmatics' annual Fleet Beat report.",
    "descriptionLong1": "For this project I was given a word document with all of the facts that needed to be called out. I then created a visual representation for all of them, simplifying them to fit into an infographic for social media. This was designed in Adobe Illustrator.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "professional"
},
{
    "title": "Pig: An Interactive Dice Game",
    "slug": "pig",
    "image": "./images/uwg-6910-pig.jpg",
    "descriptionShort": "This dice game application was built using Java and JavaFX.",
    "descriptionLong1": "The purpose of this project was to demonstrate the computer science concepts I'd learned in the two previous semesters. I started by researching the game and creating a user guide website. Next, I inherited some non-functional starter code which I finished developing in order to get to the minimum viable product. After that, I began iteratively enhancing the app and expanding its functionality. I added features like a menu system with keyboard shortcuts, a personalized user interface, and different gameplay strategies for the computer player.",
    "descriptionLong2": "Concepts covered included the MVC pattern, Observer pattern, Strategy Design pattern, refactoring, JUnit testing, and Behavior Driven Development. A link to an in-depth technical document describing the application development process can be found below.",
    "previewCta": "See Details >",
    "featured": true,
    "projectType": "student",
    "projectLink": "https://drive.google.com/file/d/1FDxlGE6Ve96cgUCdwlJxApBYHFZbpg4Q/view?usp=sharing",
    "projectLinkText": "View Technical Document >"
},
{
    "title": "Resistance Calculator",
    "slug": "resistance",
    "image": "./images/uwg-6261-resistance.jpg",
    "descriptionShort": "This single-page web application was built with Angular and deployed using Docker and Jenkins.",
    "descriptionLong1": "The purpose of this project was to demonstrate proficiency with Angular, unit testing, and end-to-end testing, as well as testing and deploying web applications using Docker and Jenkins. The application design and functionality was kept intentionally simple, as the majority of the project focused on learning Docker and Jenkins.",
    "descriptionLong2": "The application calculates the resistance of a 5-band resistor based on the band colors. I started by building a stub Angular application using Angular CLI, and configuring Karma and Protractor for unit testing and e2e testing. Next, I built a Jenkinsfile and Dockerfile to configure those tools for testing and later deployment. I then created an Angular component to house the calculator interface, as well as a service which performed the calculations and returned the results. The application was fully unit- and e2e-tested, with frequent Jenkins builds.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student"
},
{
    "title": "Tournament Brackets",
    "slug": "brackets",
    "image": "./images/uwg-6261-brackets.jpg",
    "descriptionShort": "This single-page web application was built with Angular and tested with Karma and Protractor.",
    "descriptionLong1": "The purpose of this project was to learn how to create a single-page application using Angular, gain further experience with testing, and conduct a usability study. The application allows users to enter up to 8 contestants for a tournament and keep track of winners for each round as well as an overall winner.",
    "descriptionLong2": "Topics covered included end-to-end testing with Protractor, writing helper functions and refactoring e2e tests, Angular routing, and writing a service to carry data from page to page in a single-page application. After development, a usability study was conducted to determine areas for improvement and test for bugs.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student",
    "projectLink": "https://drive.google.com/file/d/1wLspn_bCb4g_f9FllTiqRSF7-dKVhJ5-/view?usp=sharing",
    "projectLinkText": "View Usability Testing Report >"
    
},
{
    "title": "PHP Templating with Twig",
    "slug": "twig-templating",
    "image": "./images/web-tech-final-twig.jpg",
    "descriptionShort": "This page uses Twig as a template engine to efficiently render similar blocks of content.",
    "descriptionLong1": "The purpose of this project was to demonstrate my proficiency with using Twig to create PHP templates. The data is being rendered from a MySQL relational database which I designed and built.",
    "descriptionLong2": "Shared components like the page header and footer were abstracted into separate Twig templates which are imported as needed into the page templates. The template references session data and displays a \"recommended for you\" flag if the logged in user has favorited a specific meal.",
    "previewCta": "See Details >",
    "featured": true,
    "projectType": "student",
    "projectLink": "https://github.com/asuratte/web-tech-2-final/blob/master/view/meal_options.twig",
    "projectLinkText": "View on GitHub >"
    
},
{
    "title": "User Authentication with PHP & Session Data",
    "slug": "user-authentication",
    "image": "./images/web-tech-final-authentication.jpg",
    "descriptionShort": "This site allows users to log in to view members-only content including order history and account information.",
    "descriptionLong1": "The entered password is checked against the encrypted password associated with the username in the MySQL database, and the user is shown a confirmation message once logged in. The Log In and Sign Up links in the navigation are then replaced with the user's account management menu, personalized with their first name. The order history can be sorted by date.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student",
    "projectLink": "https://github.com/asuratte/web-tech-2-final/blob/master/Controller.php",
    "projectLinkText": "View on GitHub >"
    
},
{
    "title": "Server-Side Data Calculation with PHP",
    "slug": "server-side-data-calculation",
    "image": "./images/web-tech-final-data-calculation.jpg",
    "descriptionShort": "This page allows users to calculate order totals and submit an order.",
    "descriptionLong1": "After filling out the form with the selected meals, clicking on the \"calculate total\" button will show a table with the line items, quantity entered, subtotal, taxes, and total. Clicking \"submit order\" will save the order details to the database.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student",
    "projectLink": "https://github.com/asuratte/web-tech-2-final/blob/master/view/order_now.twig",
    "projectLinkText": "View on GitHub >"
},
{
    "title": "Form Validation and Processing with PHP",
    "slug": "server-side-form-validation",
    "image": "./images/web-tech-final-form-validation.jpg",
    "descriptionShort": "This sign up form uses server-side code to validate and save form data to a database.",
    "descriptionLong1": "I first built a model class containing methods which validate different parts of the form like the email address and phone number. Once the form is submitted, the data is run through the validator class and the controller passes the relevant error information to the view. In the page's template, Twig conditionals are used to display error messages and apply classes as needed if there are errors.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student",
    "projectLink": "https://github.com/asuratte/web-tech-2-final/blob/master/view/sign_up.twig",
    "projectLinkText": "View on GitHub >"
},
{
    "title": "Single-Player Scrabble Clone Built with JavaFX",
    "slug": "babble",
    "image": "./images/6241-babble.jpg",
    "descriptionShort": "This project demonstrates building an event-driven and accessible GUI using JavaFX.",
    "descriptionLong1": "I began with a provided starter project which contained only model classes. I studied the model classes and requirements, and then began building the GUI using Scene Builder. I then wrote a controller class to tie the GUI and model together. Once the game was playable, I tested it using a screen reader to ensure accessibility. After that, I fully unit tested the model classes, ensuring 100% coverage using EclEmma.",
    "descriptionLong2": "The game plays like a single-player version of Scrabble. The user is presented with a rack of 7 tiles, of which they need to make a word. The game checks their submission against a dictionary, and scores the word if accepted. The game is over when the tiles run out or no more words can be made.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student"
},
{
    "title": "Render Stock Charts Dynamically with JavaFX",
    "slug": "dynamic-stock-charts",
    "image": "./images/6312-final-stocks.jpg",
    "descriptionShort": "This project demonstrates reading input data from a file and displaying it in a chart.",
    "descriptionLong1": "I first created text files for different stocks containing the necessary data. I built a JavaFX application using the MVC design pattern which renders a default stock chart when launched, and allows the user to choose a new file to view a chart for.",
    "descriptionLong2": "The chart is drawn using JavaFX lines, labels, and shapes, and it's responsive as the window size changes which I achieved using property binding.",
    "previewCta": "See Details >",
    "featured": false,
    "projectType": "student"
},
{
    "title": "MySQL Database Design",
    "slug": "library-database",
    "image": "./images/6252-library-database.jpg",
    "descriptionShort": "I was tasked with designing and developing a relational database for a library application.",
    "descriptionLong1": "This database needed to keep track of books, patrons, and the books that have been checked out by a patron. I used foreign keys to associate specific tables to others (books and publishers are associated via the \"publisherID\" for example). I first mapped out my database architecture on paper, then moved into MySQL Workbench to mock it up. After that, I took the SQL file that MySQL Workbench generated from my design and modified it as needed to get the desired results. This included checking whether the database already existed before creating it, dropping tables if they already exist, pre-populating serveral rows of each table, and granting access to users.",
    "previewCta": "See Details >",
    "projectLink": "https://github.com/asuratte/web-tech-2-library-database/blob/main/library_database.sql",
    "projectLinkText": "View on GitHub >",
    "featured": false,
    "projectType": "student"
}
]